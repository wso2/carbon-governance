<!--
 ~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ Licensed under the Apache License, Version 2.0 (the "License");
 ~ you may not use this file except in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~      http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing, software
 ~ distributed under the License is distributed on an "AS IS" BASIS,
 ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ~ See the License for the specific language governing permissions and
 ~ limitations under the License.
-->

<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ns="http://services.info.registry.carbon.wso2.org" xmlns:ax2201="http://beans.common.registry.carbon.wso2.org/xsd" xmlns:ax2202="http://utils.beans.common.registry.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ax2199="http://exceptions.core.registry.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" targetNamespace="http://services.info.registry.carbon.wso2.org">
    <wsdl:documentation>InfoAdminService</wsdl:documentation>
    <wsdl:types>
        <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://utils.beans.common.registry.carbon.wso2.org/xsd">
            <xs:complexType name="SubscriptionInstance">
                <xs:sequence>
                    <xs:element minOccurs="0" name="address" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="digestType" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="eventName" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="notificationMethod" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="owner" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="subManUrl" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="topic" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Tag">
                <xs:sequence>
                    <xs:element minOccurs="0" name="category" type="xs:int"/>
                    <xs:element minOccurs="0" name="tagCount" type="xs:long"/>
                    <xs:element minOccurs="0" name="tagName" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="EventType">
                <xs:sequence>
                    <xs:element minOccurs="0" name="collectionEvent" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="resourceEvent" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Comment">
                <xs:sequence>
                    <xs:element minOccurs="0" name="authorUserName" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="commentPath" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="content" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="createdTime" nillable="true" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="lastModified" nillable="true" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="text" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="time" nillable="true" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="user" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
        <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exceptions.core.registry.carbon.wso2.org/xsd">
            <xs:complexType name="RegistryException">
                <xs:sequence/>
            </xs:complexType>
        </xs:schema>
        <xs:schema xmlns:ax2203="http://utils.beans.common.registry.carbon.wso2.org/xsd" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://beans.common.registry.carbon.wso2.org/xsd">
            <xs:import namespace="http://utils.beans.common.registry.carbon.wso2.org/xsd"/>
            <xs:complexType name="SubscriptionBean">
                <xs:sequence>
                    <xs:element minOccurs="0" name="errorMessage" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="loggedIn" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="pathWithVersion" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="roleAccessLevel" type="xs:int"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="roles" nillable="true" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="subscriptionInstances" nillable="true" type="ax2203:SubscriptionInstance"/>
                    <xs:element minOccurs="0" name="userAccessLevel" type="xs:int"/>
                    <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="versionView" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TagBean">
                <xs:sequence>
                    <xs:element minOccurs="0" name="errorMessage" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="loggedIn" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="pathWithVersion" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="tags" nillable="true" type="ax2203:Tag"/>
                    <xs:element minOccurs="0" name="versionView" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="RatingBean">
                <xs:sequence>
                    <xs:element minOccurs="0" name="averageRating" type="xs:float"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="averageStars" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="errorMessage" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="loggedIn" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="pathWithVersion" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="userRating" type="xs:int"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="userStars" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="versionView" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="EventTypeBean">
                <xs:sequence>
                    <xs:element minOccurs="0" name="errorMessage" nillable="true" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="eventTypes" nillable="true" type="ax2203:EventType"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CommentBean">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="comments" nillable="true" type="ax2203:Comment"/>
                    <xs:element minOccurs="0" name="errorMessage" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="loggedIn" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="pathWithVersion" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="versionView" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
        <xs:schema xmlns:ax2204="http://beans.common.registry.carbon.wso2.org/xsd" xmlns:ax2200="http://exceptions.core.registry.carbon.wso2.org/xsd" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.info.registry.carbon.wso2.org">
            <xs:import namespace="http://exceptions.core.registry.carbon.wso2.org/xsd"/>
            <xs:import namespace="http://beans.common.registry.carbon.wso2.org/xsd"/>
            <xs:element name="RegistryException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="RegistryException" nillable="true" type="ax2199:RegistryException"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="verifyEmail">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="data" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="verifyEmailResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="unsubscribe">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="unsubscribeResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="subscribeREST">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="endpoint" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="eventName" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="subscribeRESTResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax2204:SubscriptionBean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="subscribe">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="endpoint" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="eventName" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="subscribeResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax2204:SubscriptionBean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="removeTag">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="tag" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="removeComment">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="commentPath" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="rateResource">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="rating" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isUserValid">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isUserValidResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isRoleValid">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="role" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isRoleValidResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isRoleProfileExisting">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="role" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isRoleProfileExistingResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isResource">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isResourceResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isProfileExisting">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isProfileExistingResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getTags">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getTagsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax2204:TagBean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getSubscriptions">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getSubscriptionsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax2204:SubscriptionBean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getRemoteURL">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getRemoteURLResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getRatings">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getRatingsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax2204:RatingBean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getEventTypes">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getEventTypesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax2204:EventTypeBean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getComments">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getCommentsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax2204:CommentBean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addTag">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="tag" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addComment">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="comment" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
    </wsdl:types>
    <wsdl:message name="unsubscribeRequest">
        <wsdl:part name="parameters" element="ns:unsubscribe"/>
    </wsdl:message>
    <wsdl:message name="unsubscribeResponse">
        <wsdl:part name="parameters" element="ns:unsubscribeResponse"/>
    </wsdl:message>
    <wsdl:message name="RegistryException">
        <wsdl:part name="parameters" element="ns:RegistryException"/>
    </wsdl:message>
    <wsdl:message name="isProfileExistingRequest">
        <wsdl:part name="parameters" element="ns:isProfileExisting"/>
    </wsdl:message>
    <wsdl:message name="isProfileExistingResponse">
        <wsdl:part name="parameters" element="ns:isProfileExistingResponse"/>
    </wsdl:message>
    <wsdl:message name="isResourceRequest">
        <wsdl:part name="parameters" element="ns:isResource"/>
    </wsdl:message>
    <wsdl:message name="isResourceResponse">
        <wsdl:part name="parameters" element="ns:isResourceResponse"/>
    </wsdl:message>
    <wsdl:message name="getCommentsRequest">
        <wsdl:part name="parameters" element="ns:getComments"/>
    </wsdl:message>
    <wsdl:message name="getCommentsResponse">
        <wsdl:part name="parameters" element="ns:getCommentsResponse"/>
    </wsdl:message>
    <wsdl:message name="getSubscriptionsRequest">
        <wsdl:part name="parameters" element="ns:getSubscriptions"/>
    </wsdl:message>
    <wsdl:message name="getSubscriptionsResponse">
        <wsdl:part name="parameters" element="ns:getSubscriptionsResponse"/>
    </wsdl:message>
    <wsdl:message name="addCommentRequest">
        <wsdl:part name="parameters" element="ns:addComment"/>
    </wsdl:message>
    <wsdl:message name="isRoleProfileExistingRequest">
        <wsdl:part name="parameters" element="ns:isRoleProfileExisting"/>
    </wsdl:message>
    <wsdl:message name="isRoleProfileExistingResponse">
        <wsdl:part name="parameters" element="ns:isRoleProfileExistingResponse"/>
    </wsdl:message>
    <wsdl:message name="verifyEmailRequest">
        <wsdl:part name="parameters" element="ns:verifyEmail"/>
    </wsdl:message>
    <wsdl:message name="verifyEmailResponse">
        <wsdl:part name="parameters" element="ns:verifyEmailResponse"/>
    </wsdl:message>
    <wsdl:message name="rateResourceRequest">
        <wsdl:part name="parameters" element="ns:rateResource"/>
    </wsdl:message>
    <wsdl:message name="getRatingsRequest">
        <wsdl:part name="parameters" element="ns:getRatings"/>
    </wsdl:message>
    <wsdl:message name="getRatingsResponse">
        <wsdl:part name="parameters" element="ns:getRatingsResponse"/>
    </wsdl:message>
    <wsdl:message name="removeCommentRequest">
        <wsdl:part name="parameters" element="ns:removeComment"/>
    </wsdl:message>
    <wsdl:message name="addTagRequest">
        <wsdl:part name="parameters" element="ns:addTag"/>
    </wsdl:message>
    <wsdl:message name="subscribeRequest">
        <wsdl:part name="parameters" element="ns:subscribe"/>
    </wsdl:message>
    <wsdl:message name="subscribeResponse">
        <wsdl:part name="parameters" element="ns:subscribeResponse"/>
    </wsdl:message>
    <wsdl:message name="removeTagRequest">
        <wsdl:part name="parameters" element="ns:removeTag"/>
    </wsdl:message>
    <wsdl:message name="getRemoteURLRequest">
        <wsdl:part name="parameters" element="ns:getRemoteURL"/>
    </wsdl:message>
    <wsdl:message name="getRemoteURLResponse">
        <wsdl:part name="parameters" element="ns:getRemoteURLResponse"/>
    </wsdl:message>
    <wsdl:message name="subscribeRESTRequest">
        <wsdl:part name="parameters" element="ns:subscribeREST"/>
    </wsdl:message>
    <wsdl:message name="subscribeRESTResponse">
        <wsdl:part name="parameters" element="ns:subscribeRESTResponse"/>
    </wsdl:message>
    <wsdl:message name="getEventTypesRequest">
        <wsdl:part name="parameters" element="ns:getEventTypes"/>
    </wsdl:message>
    <wsdl:message name="getEventTypesResponse">
        <wsdl:part name="parameters" element="ns:getEventTypesResponse"/>
    </wsdl:message>
    <wsdl:message name="isUserValidRequest">
        <wsdl:part name="parameters" element="ns:isUserValid"/>
    </wsdl:message>
    <wsdl:message name="isUserValidResponse">
        <wsdl:part name="parameters" element="ns:isUserValidResponse"/>
    </wsdl:message>
    <wsdl:message name="isRoleValidRequest">
        <wsdl:part name="parameters" element="ns:isRoleValid"/>
    </wsdl:message>
    <wsdl:message name="isRoleValidResponse">
        <wsdl:part name="parameters" element="ns:isRoleValidResponse"/>
    </wsdl:message>
    <wsdl:message name="getTagsRequest">
        <wsdl:part name="parameters" element="ns:getTags"/>
    </wsdl:message>
    <wsdl:message name="getTagsResponse">
        <wsdl:part name="parameters" element="ns:getTagsResponse"/>
    </wsdl:message>
    <wsdl:portType name="InfoAdminServicePortType">
        <wsdl:operation name="unsubscribe">
            <wsdl:input message="ns:unsubscribeRequest" wsaw:Action="urn:unsubscribe"/>
            <wsdl:output message="ns:unsubscribeResponse" wsaw:Action="urn:unsubscribeResponse"/>
            <wsdl:fault message="ns:RegistryException" name="RegistryException" wsaw:Action="urn:unsubscribeRegistryException"/>
        </wsdl:operation>
        <wsdl:operation name="isProfileExisting">
            <wsdl:input message="ns:isProfileExistingRequest" wsaw:Action="urn:isProfileExisting"/>
            <wsdl:output message="ns:isProfileExistingResponse" wsaw:Action="urn:isProfileExistingResponse"/>
            <wsdl:fault message="ns:RegistryException" name="RegistryException" wsaw:Action="urn:isProfileExistingRegistryException"/>
        </wsdl:operation>
        <wsdl:operation name="isResource">
            <wsdl:input message="ns:isResourceRequest" wsaw:Action="urn:isResource"/>
            <wsdl:output message="ns:isResourceResponse" wsaw:Action="urn:isResourceResponse"/>
            <wsdl:fault message="ns:RegistryException" name="RegistryException" wsaw:Action="urn:isResourceRegistryException"/>
        </wsdl:operation>
        <wsdl:operation name="getComments">
            <wsdl:input message="ns:getCommentsRequest" wsaw:Action="urn:getComments"/>
            <wsdl:output message="ns:getCommentsResponse" wsaw:Action="urn:getCommentsResponse"/>
            <wsdl:fault message="ns:RegistryException" name="RegistryException" wsaw:Action="urn:getCommentsRegistryException"/>
        </wsdl:operation>
        <wsdl:operation name="getSubscriptions">
            <wsdl:input message="ns:getSubscriptionsRequest" wsaw:Action="urn:getSubscriptions"/>
            <wsdl:output message="ns:getSubscriptionsResponse" wsaw:Action="urn:getSubscriptionsResponse"/>
            <wsdl:fault message="ns:RegistryException" name="RegistryException" wsaw:Action="urn:getSubscriptionsRegistryException"/>
        </wsdl:operation>
        <wsdl:operation name="addComment">
            <wsdl:input message="ns:addCommentRequest" wsaw:Action="urn:addComment"/>
            <wsdl:fault message="ns:RegistryException" name="RegistryException" wsaw:Action="urn:addCommentRegistryException"/>
        </wsdl:operation>
        <wsdl:operation name="isRoleProfileExisting">
            <wsdl:input message="ns:isRoleProfileExistingRequest" wsaw:Action="urn:isRoleProfileExisting"/>
            <wsdl:output message="ns:isRoleProfileExistingResponse" wsaw:Action="urn:isRoleProfileExistingResponse"/>
            <wsdl:fault message="ns:RegistryException" name="RegistryException" wsaw:Action="urn:isRoleProfileExistingRegistryException"/>
        </wsdl:operation>
        <wsdl:operation name="verifyEmail">
            <wsdl:input message="ns:verifyEmailRequest" wsaw:Action="urn:verifyEmail"/>
            <wsdl:output message="ns:verifyEmailResponse" wsaw:Action="urn:verifyEmailResponse"/>
            <wsdl:fault message="ns:RegistryException" name="RegistryException" wsaw:Action="urn:verifyEmailRegistryException"/>
        </wsdl:operation>
        <wsdl:operation name="rateResource">
            <wsdl:input message="ns:rateResourceRequest" wsaw:Action="urn:rateResource"/>
            <wsdl:fault message="ns:RegistryException" name="RegistryException" wsaw:Action="urn:rateResourceRegistryException"/>
        </wsdl:operation>
        <wsdl:operation name="getRatings">
            <wsdl:input message="ns:getRatingsRequest" wsaw:Action="urn:getRatings"/>
            <wsdl:output message="ns:getRatingsResponse" wsaw:Action="urn:getRatingsResponse"/>
            <wsdl:fault message="ns:RegistryException" name="RegistryException" wsaw:Action="urn:getRatingsRegistryException"/>
        </wsdl:operation>
        <wsdl:operation name="removeComment">
            <wsdl:input message="ns:removeCommentRequest" wsaw:Action="urn:removeComment"/>
            <wsdl:fault message="ns:RegistryException" name="RegistryException" wsaw:Action="urn:removeCommentRegistryException"/>
        </wsdl:operation>
        <wsdl:operation name="addTag">
            <wsdl:input message="ns:addTagRequest" wsaw:Action="urn:addTag"/>
            <wsdl:fault message="ns:RegistryException" name="RegistryException" wsaw:Action="urn:addTagRegistryException"/>
        </wsdl:operation>
        <wsdl:operation name="subscribe">
            <wsdl:input message="ns:subscribeRequest" wsaw:Action="urn:subscribe"/>
            <wsdl:output message="ns:subscribeResponse" wsaw:Action="urn:subscribeResponse"/>
            <wsdl:fault message="ns:RegistryException" name="RegistryException" wsaw:Action="urn:subscribeRegistryException"/>
        </wsdl:operation>
        <wsdl:operation name="removeTag">
            <wsdl:input message="ns:removeTagRequest" wsaw:Action="urn:removeTag"/>
            <wsdl:fault message="ns:RegistryException" name="RegistryException" wsaw:Action="urn:removeTagRegistryException"/>
        </wsdl:operation>
        <wsdl:operation name="getRemoteURL">
            <wsdl:input message="ns:getRemoteURLRequest" wsaw:Action="urn:getRemoteURL"/>
            <wsdl:output message="ns:getRemoteURLResponse" wsaw:Action="urn:getRemoteURLResponse"/>
            <wsdl:fault message="ns:RegistryException" name="RegistryException" wsaw:Action="urn:getRemoteURLRegistryException"/>
        </wsdl:operation>
        <wsdl:operation name="subscribeREST">
            <wsdl:input message="ns:subscribeRESTRequest" wsaw:Action="urn:subscribeREST"/>
            <wsdl:output message="ns:subscribeRESTResponse" wsaw:Action="urn:subscribeRESTResponse"/>
            <wsdl:fault message="ns:RegistryException" name="RegistryException" wsaw:Action="urn:subscribeRESTRegistryException"/>
        </wsdl:operation>
        <wsdl:operation name="getEventTypes">
            <wsdl:input message="ns:getEventTypesRequest" wsaw:Action="urn:getEventTypes"/>
            <wsdl:output message="ns:getEventTypesResponse" wsaw:Action="urn:getEventTypesResponse"/>
            <wsdl:fault message="ns:RegistryException" name="RegistryException" wsaw:Action="urn:getEventTypesRegistryException"/>
        </wsdl:operation>
        <wsdl:operation name="isUserValid">
            <wsdl:input message="ns:isUserValidRequest" wsaw:Action="urn:isUserValid"/>
            <wsdl:output message="ns:isUserValidResponse" wsaw:Action="urn:isUserValidResponse"/>
            <wsdl:fault message="ns:RegistryException" name="RegistryException" wsaw:Action="urn:isUserValidRegistryException"/>
        </wsdl:operation>
        <wsdl:operation name="isRoleValid">
            <wsdl:input message="ns:isRoleValidRequest" wsaw:Action="urn:isRoleValid"/>
            <wsdl:output message="ns:isRoleValidResponse" wsaw:Action="urn:isRoleValidResponse"/>
            <wsdl:fault message="ns:RegistryException" name="RegistryException" wsaw:Action="urn:isRoleValidRegistryException"/>
        </wsdl:operation>
        <wsdl:operation name="getTags">
            <wsdl:input message="ns:getTagsRequest" wsaw:Action="urn:getTags"/>
            <wsdl:output message="ns:getTagsResponse" wsaw:Action="urn:getTagsResponse"/>
            <wsdl:fault message="ns:RegistryException" name="RegistryException" wsaw:Action="urn:getTagsRegistryException"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="InfoAdminServiceSoap11Binding" type="ns:InfoAdminServicePortType">
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
        <wsdl:operation name="unsubscribe">
            <soap:operation soapAction="urn:unsubscribe" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isResource">
            <soap:operation soapAction="urn:isResource" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isProfileExisting">
            <soap:operation soapAction="urn:isProfileExisting" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getComments">
            <soap:operation soapAction="urn:getComments" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSubscriptions">
            <soap:operation soapAction="urn:getSubscriptions" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addComment">
            <soap:operation soapAction="urn:addComment" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="RegistryException">
                <soap:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isRoleProfileExisting">
            <soap:operation soapAction="urn:isRoleProfileExisting" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="verifyEmail">
            <soap:operation soapAction="urn:verifyEmail" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="rateResource">
            <soap:operation soapAction="urn:rateResource" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="RegistryException">
                <soap:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getRatings">
            <soap:operation soapAction="urn:getRatings" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeComment">
            <soap:operation soapAction="urn:removeComment" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="RegistryException">
                <soap:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeTag">
            <soap:operation soapAction="urn:removeTag" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="RegistryException">
                <soap:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="subscribe">
            <soap:operation soapAction="urn:subscribe" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addTag">
            <soap:operation soapAction="urn:addTag" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="RegistryException">
                <soap:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getRemoteURL">
            <soap:operation soapAction="urn:getRemoteURL" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="subscribeREST">
            <soap:operation soapAction="urn:subscribeREST" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getEventTypes">
            <soap:operation soapAction="urn:getEventTypes" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isUserValid">
            <soap:operation soapAction="urn:isUserValid" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isRoleValid">
            <soap:operation soapAction="urn:isRoleValid" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getTags">
            <soap:operation soapAction="urn:getTags" style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="InfoAdminServiceSoap12Binding" type="ns:InfoAdminServicePortType">
        <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
        <wsdl:operation name="unsubscribe">
            <soap12:operation soapAction="urn:unsubscribe" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap12:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isResource">
            <soap12:operation soapAction="urn:isResource" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap12:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isProfileExisting">
            <soap12:operation soapAction="urn:isProfileExisting" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap12:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getComments">
            <soap12:operation soapAction="urn:getComments" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap12:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getSubscriptions">
            <soap12:operation soapAction="urn:getSubscriptions" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap12:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addComment">
            <soap12:operation soapAction="urn:addComment" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="RegistryException">
                <soap12:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isRoleProfileExisting">
            <soap12:operation soapAction="urn:isRoleProfileExisting" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap12:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="verifyEmail">
            <soap12:operation soapAction="urn:verifyEmail" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap12:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="rateResource">
            <soap12:operation soapAction="urn:rateResource" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="RegistryException">
                <soap12:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getRatings">
            <soap12:operation soapAction="urn:getRatings" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap12:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeComment">
            <soap12:operation soapAction="urn:removeComment" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="RegistryException">
                <soap12:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeTag">
            <soap12:operation soapAction="urn:removeTag" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="RegistryException">
                <soap12:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="subscribe">
            <soap12:operation soapAction="urn:subscribe" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap12:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addTag">
            <soap12:operation soapAction="urn:addTag" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:fault name="RegistryException">
                <soap12:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getRemoteURL">
            <soap12:operation soapAction="urn:getRemoteURL" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap12:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="subscribeREST">
            <soap12:operation soapAction="urn:subscribeREST" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap12:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getEventTypes">
            <soap12:operation soapAction="urn:getEventTypes" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap12:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isUserValid">
            <soap12:operation soapAction="urn:isUserValid" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap12:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isRoleValid">
            <soap12:operation soapAction="urn:isRoleValid" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap12:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getTags">
            <soap12:operation soapAction="urn:getTags" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="RegistryException">
                <soap12:fault use="literal" name="RegistryException"/>
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="InfoAdminServiceHttpBinding" type="ns:InfoAdminServicePortType">
        <http:binding verb="POST"/>
        <wsdl:operation name="unsubscribe">
            <http:operation location="unsubscribe"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="isResource">
            <http:operation location="isResource"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="isProfileExisting">
            <http:operation location="isProfileExisting"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getComments">
            <http:operation location="getComments"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getSubscriptions">
            <http:operation location="getSubscriptions"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="addComment">
            <http:operation location="addComment"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="isRoleProfileExisting">
            <http:operation location="isRoleProfileExisting"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="verifyEmail">
            <http:operation location="verifyEmail"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="rateResource">
            <http:operation location="rateResource"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getRatings">
            <http:operation location="getRatings"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="removeComment">
            <http:operation location="removeComment"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="removeTag">
            <http:operation location="removeTag"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="subscribe">
            <http:operation location="subscribe"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="addTag">
            <http:operation location="addTag"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getRemoteURL">
            <http:operation location="getRemoteURL"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="subscribeREST">
            <http:operation location="subscribeREST"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getEventTypes">
            <http:operation location="getEventTypes"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="isUserValid">
            <http:operation location="isUserValid"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="isRoleValid">
            <http:operation location="isRoleValid"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getTags">
            <http:operation location="getTags"/>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="InfoAdminService">
        <wsdl:port name="InfoAdminServiceHttpsSoap11Endpoint" binding="ns:InfoAdminServiceSoap11Binding">
            <soap:address location="https://10.0.0.11:9443/services/InfoAdminService.InfoAdminServiceHttpsSoap11Endpoint/"/>
        </wsdl:port>
        <wsdl:port name="InfoAdminServiceHttpsSoap12Endpoint" binding="ns:InfoAdminServiceSoap12Binding">
            <soap12:address location="https://10.0.0.11:9443/services/InfoAdminService.InfoAdminServiceHttpsSoap12Endpoint/"/>
        </wsdl:port>
        <wsdl:port name="InfoAdminServiceHttpsEndpoint" binding="ns:InfoAdminServiceHttpBinding">
            <http:address location="https://10.0.0.11:9443/services/InfoAdminService.InfoAdminServiceHttpsEndpoint/"/>
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>